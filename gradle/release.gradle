apply plugin: 'maven'
apply plugin: 'java'

task versionArchives {
    description = "Creates a continuous-delivery friendly version number for the service"
    def buildNumber = System.getenv('BUILD_NUMBER') ?: 0

    // Default to building SNAPSHOT versions unless the build was executed with the -PreleaseType={type} command line parameter
    if(project.hasProperty('releaseType')) {
        if(project.releaseType == 'release') {
            project.ext.set("releaseVersion", "${project.version}." + buildNumber);
        } else if(project.releaseType == 'snapshot') {
            project.ext.set("releaseVersion", "${project.version}-SNAPSHOT");
        } else {
            throw new RuntimeException("Invalid releaseType specified:  Must be 'release' or 'snapshot'!")
        }
    } else {
        logger.info("Property 'releaseType' was not specified.  Defaulting to 'snapshot'!")
        project.ext.set("releaseVersion", "${project.version}-SNAPSHOT");
    }

    logger.info("Setting artifact version: ${releaseVersion}")
    project.version = "${releaseVersion}"
}
build.dependsOn versionArchives
uploadArchives.dependsOn versionArchives

jar {
    baseName = "${artifact}"
    version = "${releaseVersion}"
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'http://artifactory.pes.nikecloud.com/artifactory/libs-release-local') {
                authentication(userName: 'admin', password: 'password')
                pom.groupId = project.group
                pom.artifactId = project.artifact
                pom.version = project.releaseVersion
            }
            snapshotRepository(url: 'http://artifactory.pes.nikecloud.com/artifactory/libs-snapshot-local') {
                authentication(userName: 'admin', password: 'password')
                pom.groupId = project.group
                pom.artifactId = project.artifact
                pom.version = project.releaseVersion
            }
        }
    }
}